{"version":3,"sources":["images/load-logo.png","images/teamates.svg","utility/notification.js","Home/Home.js","images/team_3.svg","About/about.js","jobs/job.js","images/gallery1.png","images/gallery2.png","Startups/startups.js","Investors/investors.js","images/verify3.svg","Profile/verifyEmail.js","Profile/startupForm.js","Profile/investorForm.js","images/login.svg","images/sign_in.svg","dashboard/dashboard.js","Profile/profile.js","jobs/jobs.js","policies/t&c.js","policies/policy.js","images/logo.png","images/logo-white.png","footer/footer.js","Nav/nav.js","utility/connectdb.js","Home/Loadhome.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["Notifyer","message","type","onDismissed","multiple","icon","width","className","setTimeout","map","v","i","right","showIcon","String","home","props","countStartups","state","count_startup","Object","keys","startups","length","setState","usp","height","color","count_investors","shadow","investors","a","document","title","this","active","window","scrollTo","interval","setInterval","not_active","error","errMessage","Container","fluid","Row","Col","left","to","Button","src","Teampic","alt","down","md","sm","xs","style","backgroundColor","logo","bg","img","desc","values","slice","val","ind","name","interests","cascade","id","company_name","year_established","category","location","React","Component","team","about","TeamPic","margin","position","Job","job","goback","useEffect","job_title","company","onClick","salary","job_type","mode","description","requirements","extra_info","target","rel","href","application_link","Startup","index","view","snapshot","startup","website","company_size","registered","business_model","funding_stage","gallery","Carousel","Item","image","Caption","Teampic1","Teampic2","pitch","work_benefits","hover","console","log","Spinner","animation","renderview","profile_pic","detail","VerifyEmail","email","setVerify","close","checkForm","useState","codes","setCodes","getElementById","focus","handleChange","e","preventDefault","value","Number","checkcomplete","VerifySVG","lg","Form","Control","onChange","onKeyUp","max","StartupForm","user_data","req","proceed","user","JSON","parse","setValues","years","Date","getFullYear","push","err","notify","setNotify","checked","Group","controlId","Label","placeholder","as","rows","Text","pattern","y","variant","formData","split","parseInt","token","access_token","fetch","pk","method","headers","Authorization","body","stringify","then","res","json","data","code","catch","InvestorForm","autoComplete","profile_picture","size","Dashboard","alert","external","profile","override","css","handlecheckbox","handlePassChange","show_pass","checkSignForm","loading","signupfields","investor","check1","check2","username","password","forgotpass","check","emailVerify","staging","localStorage","setItem","response","is_startup","verified","getItem","removeItem","checkloginForm","loginFields","sta_inv","required","login","Login","InputGroup","Check","label","speedMultiplier","altLogin","Signin","SignUp","muted","signup","mounted","toLowerCase","live","jobs","load","Policy","scroll","footer","Logo","nav","setExpanded","expanded","home_active","about_active","jobs_active","startups_active","investors_active","profile_active","basename","Navbar","collapseOnSelect","expand","sticky","Brand","Toggle","aria-controls","Collapse","Nav","defaultActiveKey","Link","exact","path","ConnectDB","Loader","connect","Connect","results","load_start","load_invest","load_jobs","loadScreen","internet","url","renderviews","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9f7cfc77.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/load-logo.9bae8eca.png\";","export default __webpack_public_path__ + \"static/media/teamates.bbf5f2c8.svg\";","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { CheckLg, ExclamationCircleFill, ExclamationTriangle  } from 'react-bootstrap-icons';\r\nimport {Alert, AlertContainer} from 'react-bs-notifier';\r\n\r\n// Css\r\nimport './notification.css';\r\n\r\n// Animation\r\nimport {Slide} from 'react-reveal';\r\n\r\n// PropTypes\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Notifyer({message, type, onDismissed, multiple}) {\r\n  // const [alertTimeout] = useState(3000);\r\n//   const [position] = useState('top-right');\r\n\r\n// info, warning, danger, or success \r\n        setTimeout(() => {\r\n          onDismissed(); //Clears the notification after 3 seconds\r\n        },5000);\r\n\r\n         function icon(){\r\n          switch(type){\r\n            default: return <CheckLg width={20} className='not-icon'/>;\r\n            case 'success': return <CheckLg width={20} className='not-icon green'/>;\r\n            case 'danger': return <ExclamationCircleFill width={20} className='not-icon red'/>;\r\n            case 'warning': return <ExclamationTriangle width={20} className='not-icon'/>;\r\n          }\r\n        }\r\n\r\n  return (\r\n          <div>\r\n              <AlertContainer>\r\n                {/* If there are multiple messages, it loops them then show it */}\r\n                {(multiple) ? \r\n                message.map((v,i) => \r\n                <Slide key={i} right>\r\n                <Alert key={i} type={type} showIcon={false} >{icon()} {String(v)}</Alert>\r\n                </Slide>\r\n                )\r\n                : \r\n                <Slide right>\r\n                <Alert type={type} showIcon={false} >{icon()} {message}</Alert>\r\n                </Slide>\r\n                }\r\n               \r\n                </AlertContainer>\r\n          </div>\r\n  );\r\n}\r\n\r\nNotifyer.propTypes = {\r\n  message: PropTypes.oneOfType([PropTypes.string, PropTypes.array,]).isRequired,\r\n  type: PropTypes.oneOf(['info', 'warning', 'danger', 'success']),\r\n  onDismissed: PropTypes.func.isRequired,\r\n  multiple: PropTypes.bool.isRequired\r\n}","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Home.css';\r\nimport {Container, Row, Col, Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\n// Prototype Validation\r\nimport PropTypes from 'prop-types';\r\n\r\n// Importing the main homepage svg picture\r\nimport Teampic from '../images/teamates.svg';\r\nimport { ArrowRightShort, CircleFill, ClockHistory, ShopWindow} from 'react-bootstrap-icons';\r\n\r\nimport {Fade, Zoom, Slide} from 'react-reveal';\r\n\r\n// Notification bar\r\nimport Notifyer from '../utility/notification';\r\n// import ConnectDB from '../utility/connectdb';\r\n\r\n\r\nclass home extends React.Component {\r\n     constructor(props) {\r\n          super(props);\r\n          this.state =({\r\n               count_startup: 0,\r\n               count_investors: 0,\r\n               shadow: false,\r\n               \r\n               // The investors list from the database\r\n               investors: this.props.investors,\r\n               startups: this.props.startups,\r\n\r\n               // Make the multiple option of the notification false\r\n               multiple: false\r\n          })\r\n     }\r\n\r\n     async componentDidMount(){\r\n          document.title = 'Home - Startvest';\r\n          this.props.active();\r\n          window.scrollTo(0, 0);\r\n          \r\n          this.interval = setInterval(() => {\r\n              this.countStartups()\r\n          }, 2000);\r\n     \r\n     }\r\n\r\n     componentWillUnmount(){\r\n          this.props.not_active();\r\n     }\r\n\r\n\r\n     \r\n     // Count and iterate over the amount of startups,\r\n     //  to give an animation of counting on the home page\r\n     countStartups = () =>{\r\n          if(this.state.count_startup < Object.keys(this.state.startups).length){\r\n               this.setState({count_startup: this.state.count_startup + 1})\r\n          }\r\n     }\r\n\r\n     // data for the unique selling point\r\n     usp = [\r\n          {\r\n               \"logo\": {\r\n                    \"img\" : <ShopWindow height={20} width={30} color={'#A45CFF'}/>,\r\n                    \"bg\": \"rgba(164, 92, 255, 0.05)\"\r\n               },\r\n               \"title\": \"We showcase budding startups\", \r\n               \"desc\": \"They are startups looking for early stage funding, from the community to actualize their dreams\"\r\n          },\r\n          {\r\n               \"logo\": {\r\n                    \"img\" : <ClockHistory height={20} width={30} color={'#75FDCD'}/>,\r\n                    \"bg\": \"rgba(117, 253, 205, 0.1)\"\r\n               },\r\n               \"title\": \"Get started in minutes\", \r\n               \"desc\": \"Create an investor account and start investing eith as little as N1000\"\r\n          },    \r\n          \r\n     ]\r\n\r\n\r\n     render(){\r\n          return(\r\n               <div className=\"Home\">\r\n                     {(this.state.error) ? <Notifyer message={this.state.errMessage} type={this.state.type} multiple={this.state.multiple} onDismissed={() => this.setState({error: false})} />:null}\r\n                    <h1 className='Home-head'>Where your idea meets funding!</h1>\r\n                    <Container className='homePage' fluid>\r\n                         <Row className='flex-column-reverse flex-md-row'>\r\n                              <Col className='text ' >\r\n                                   <h5 className='tagline'>We believe in your vision!</h5>\r\n                                   <div className='homeText'>\r\n                                        Present your ideas and\r\n                                        <p> connect with top investors to achieve your dreams today!</p>\r\n                                   </div>\r\n                                   <Fade left>\r\n                                   <Row className='home-btns'>\r\n                                        <Col  className='btn-outline '><Link to='/about'><Button>Learn More</Button></Link></Col>\r\n                                        <Col  className='btn-fill '><Link to='/profile'><Button>Get Started<ArrowRightShort  height={25} width={25}/></Button></Link></Col>\r\n                                   </Row>\r\n                                   </Fade>\r\n                              </Col>\r\n                              <Zoom right>\r\n                              <Col  className='teamIcon'><img className='home-image'  src={Teampic} alt=\"teamates discussing\"  /></Col>\r\n                              </Zoom>\r\n                         </Row>\r\n                    </Container>\r\n\r\n                    {/* Container for unique selling points */}\r\n                    <Container className='home-startup ' >\r\n                         <Slide down>\r\n                              <h5 className='tagline'>We are the platform to invest in disruptive ideas <span className='tagline-italic'>early!</span></h5>\r\n                         </Slide>\r\n\r\n                         <Row>\r\n                              {this.usp.map((v,i) => \r\n                               <Col md={4} sm={'auto'} className='usp-container '>\r\n                                    <Row>\r\n                                         <Col xs={2}><div style={{backgroundColor: `${v.logo.bg}`}}  className='usp-logo'>{v.logo.img}</div></Col>\r\n                                         <Col>\r\n                                         <div className='usp-title'>{v.title}</div>\r\n                                         <span className='usp-description'>{v.desc}</span>\r\n                                         </Col>\r\n                                    </Row>\r\n                                    \r\n                              </Col> \r\n                              )}    \r\n                         </Row>\r\n                    </Container>\r\n\r\n                    {/* Container for top investors*/}\r\n                    <div className='accent'>{/*accent colour change */}\r\n                    <Container className='home-startup' fluid>\r\n                         <Slide  right>\r\n                         <div className='center'>\r\n                         <h5 className='tagline ' >Connect to top investors</h5>            \r\n                         <p className='counter'>{this.state.investors.length}+ Investor{(this.state.investors > 1)? 's':''} looking for startups</p>\r\n                         </div>\r\n                         <Row >   \r\n                              {Object.values(this.state.investors).slice(0, 3).map((val, ind) => \r\n                              <div key={ind} className='job-container shad'>\r\n                                   <Row>\r\n                                   <Col sm='auto'>\r\n                                        <div key={ind} className='col-startup-name' >{val.name}</div>\r\n                                        <span className='underText'> {Object.values(val.interests).map((v,i) => <span key={i}><CircleFill className='icon-back' height={5} width={5}/> {v}  </span>)} \r\n                                        </span>\r\n                                   </Col>\r\n                                   </Row>\r\n                              </div>\r\n                              )}\r\n                              \r\n                         </Row>\r\n                         </Slide>\r\n                    </Container>\r\n\r\n                    {/* Container for options for startups */}\r\n                    <Container className='home-startup ' fluid>\r\n                         <Row >\r\n                              <Slide left>\r\n                              <Col>\r\n                              <h5 className='tagline'>See all the top startups</h5>\r\n                              <p className='counter margin-top'>{this.state.count_startup}+ startup{(this.state.count_startup > 1)? 's':''} Registered</p>\r\n                              <p className='homeText'>Join us today to make you take a step closer in achieving your goals!</p>\r\n                              </Col>\r\n                              </Slide>\r\n                         \r\n                         <Zoom cascade right>\r\n                              <Col sm={12}>\r\n                              {Object.values(this.state.startups).slice(0, 2).map((val, ind) => \r\n                              <div id={ind} key={ind} className='job-container shadow' >\r\n                                   <Row>\r\n                                   <Col sm='auto'>\r\n                                        <div key={ind} className='col-startup-name' >{val.company_name}</div>                                                                \r\n                                        <span className='underText'>Est. {val.year_established}</span> <span><CircleFill className='icon-back' height={5} width={5}/></span> <span className='underText' >{Object.values(val.category).map((v,i) => `${v} `)}</span> <span><CircleFill className='icon-back' height={5} width={5}/></span> <span className='underText' >{val.location}</span>\r\n                                   </Col>\r\n                                   </Row>\r\n                              </div>\r\n                              )}\r\n                              </Col>\r\n                         </Zoom>\r\n                         </Row>\r\n                    </Container>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n               </div>\r\n          )\r\n          \r\n     }\r\n}\r\n\r\nhome.propTypes = {\r\n     /**\r\n   * An Array Containing the investors data extracted from the server\r\n   * A fetch request was made in the LoadHome file\r\n   */\r\n     investors: PropTypes.array.isRequired,\r\n     /**\r\n   * An Array Containing the Startups data extracted from the server\r\n   * A fetch request was made in the LoadHome file\r\n   */\r\n     startups: PropTypes.array.isRequired,\r\n     /**\r\n   * A function to inform the navigation, \r\n   * that the component is currently active, \r\n   */\r\n     active: PropTypes.func.isRequired,\r\n     /**\r\n   * A function to inform the navigation, \r\n   * that the component is currently not active, before the component unmounts\r\n   */\r\n     not_active: PropTypes.func.isRequired\r\n};\r\nexport default home;","export default __webpack_public_path__ + \"static/media/team_3.9c902ffd.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './about.css';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport TeamPic from '../images/team_3.svg';\r\nimport { Person } from 'react-bootstrap-icons';\r\n\r\n// Format of team members [avatarurl, name, position] \r\nvar team = {\r\n     'member1': {\r\n          'image':false, \r\n          'name':'Okorite Briggs', \r\n          'position':'Backened Developer'\r\n     },\r\n     'member2': {\r\n          'image':false, \r\n          'name':'Hanif Adedotun', \r\n          'position':'Frontend Developer & Graphics Designer'\r\n     },\r\n     'member3': {\r\n          'image':false, \r\n          'name':'David Utee Usiere', \r\n          'position':'Frontend Developer & Scribe'\r\n     },\r\n     'member4': {\r\n          'image':false, \r\n          'name':'Fortune Aliebiesu', \r\n          'position':'Backened Developer'\r\n     }\r\n}\r\n\r\nclass about extends React.Component {\r\n     componentDidMount(){\r\n          this.props.active();\r\n          document.title = 'About Startvest';\r\n          window.scrollTo(0, 0);\r\n     }\r\n     componentWillUnmount(){\r\n          this.props.not_active();\r\n     }\r\n     render(){\r\n          return(\r\n          <div>\r\n               <h1 className=\"heading\">About Us</h1>\r\n               <Container className='about-content'>\r\n                    <Row className=\"teambrief\" >\r\n                         <Col><img src={TeamPic} className='about-team-image ' sm={12} md={6} alt=\"Team pic svg\"/></Col>\r\n\r\n                         <Col sm={12} md={6} >\r\n                         <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla ullamcorper tortor sit amet consequat semper. Proin malesuada enim vel felis rhoncus, vel cursus tellus porttitor. Nulla facilisis vehicula mattis. Sed dapibus sem a urna malesuada fermentum. Pellentesque aliquet lorem eget turpis molestie aliquam. Cras pharetra, metus in consectetur interdum, tellus tellus gravida tortor, eu tristique neque ex non nisi. Nulla elementum a risus at mollis. Cras elit dui, auctor hendrerit nisl id, posuere elementum dolor. Vivamus consectetur iaculis libero convallis volutpat. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; In eleifend sem commodo lorem volutpat, sit amet bibendum ipsum bibendum. Etiam lacinia, nibh sit amet mattis hendrerit, purus dolor venenatis eros, et tempor nisl erat malesuada nibh. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Morbi sed erat lobortis, maximus risus ut, auctor risus. Aliquam venenatis massa a dapibus iaculis. </p>\r\n                         </Col>\r\n                         \r\n                    </Row>\r\n                    <Container>\r\n                         <h3 className=\"teamHead\">Vision Statement</h3>\r\n                         <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>\r\n\r\n                         <h3 className=\"teamHead\">Mission Statement</h3>\r\n                         <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>\r\n                    </Container>\r\n\r\n                    <h2 className=\"teamHead\">Meet our team</h2>\r\n                    <Container className='meet_the_team'>\r\n                    <Row>\r\n                    {Object.values(team).map((val, i)=>\r\n                    <Col className='team-container' key={i} md={3}>\r\n                         <Col key={i}>\r\n                              <p><span id='abt-avatar'><Person color='white' margin={3} height={30} width={30}/></span></p>\r\n                              <b>{val.name}</b>\r\n                              <p>{val.position}</p>\r\n                         </Col>     \r\n                    </Col>\r\n\r\n                    //   <th key={ind}>{(val) ? val:' '}</th>\r\n                    )}  \r\n                    </Row>\r\n                    </Container>\r\n\r\n               </Container>\r\n          </div>\r\n          )\r\n     }\r\n}\r\n\r\nabout.propTypes = {\r\n     active: PropTypes.func.isRequired,\r\n     not_active: PropTypes.func.isRequired\r\n};\r\nexport default about;","import React, {useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../Startups/startups.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Col, Container, Row, Button} from 'react-bootstrap';\r\nimport {ArrowLeft, CircleFill, ArrowRightShort} from 'react-bootstrap-icons';\r\n\r\n\r\nfunction Job({job, goback}){\r\n     useEffect(() => {\r\n          document.title = `${job.job_title} at ${job.company.company_name}`;\r\n     })\r\n     return(\r\n          <div>\r\n               {/* {Object.values(job).map((val, ind) => */}\r\n                <Container>\r\n                <Row>\r\n                    <Col xs={1}><ArrowLeft className='icon-back' width={40} height={40} onClick={goback}/></Col>\r\n                    {/* <Col sm='auto'><span className='logo'><img src={startup.logo} alt={startup.company_name + ' Logo'}/></span></Col> */}\r\n                     <Col md='auto'>\r\n                     <h1 className='startups-head'>{job.company.company_name}</h1>\r\n                     <p className='job-overview'><span>{job.job_title}</span> <span><CircleFill className='icon-back' height={5} width={5}/></span> <span>{job.location}</span> <span><CircleFill className='icon-back' height={5} width={5}/></span>  <span>{job.salary}</span> <span><CircleFill className='icon-back' height={5} width={5}/></span>  <span>{job.job_type}</span> <span><CircleFill className='icon-back' height={5} width={5}/></span>  <span>{job.mode}</span></p>\r\n                     </Col>\r\n                </Row>\r\n                <Row className='job-group'>\r\n                     <Col md={6} sm={12}>\r\n                          <h3 className='gallery-head'>Job description</h3>\r\n                          <p>{job.description}</p>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                         <h3 className='gallery-head'>Requirements</h3>\r\n                         <ul className='working-list'> \r\n                              {job.requirements.map((val, ind) => \r\n                                   <li key={ind}><CircleFill className='icon-back' height={5} width={5}/>  {val} </li>\r\n                              )}\r\n                         </ul>\r\n                    </Col>\r\n                    </Row>\r\n                    <Row className='job-group'>\r\n                    <Col md={6} sm={12}>\r\n                         <h3 className='gallery-head'>Extra Information</h3>\r\n                         <ul className='working-list'>\r\n                         {job.extra_info.map((val, ind) => \r\n                                   <li key={ind}> <CircleFill className='icon-back' height={5} width={5}/>  {val} </li>\r\n                         )}\r\n                         </ul>\r\n                    </Col>\r\n                </Row>\r\n                {/* <Row className='more-information'>\r\n                For more information or questions contact us at <span ><a className='alt-link' href = {\"mailto: \" + startup.email}>{startup.email}</a></span> or phone number  <span ><a className='alt-link' href={'tel:'+startup.number}>{startup.number}</a></span>\r\n                </Row> */}\r\n                <span className='btn-fill'><Button ><a target=\"_blank\" rel=\"noreferrer\" href = { 'http://'+job.application_link}>Apply now</a><ArrowRightShort  height={25} width={25}/></Button></span>\r\n               </Container>\r\n               {/* )} */}\r\n              \r\n          </div>\r\n     )\r\n}\r\n\r\nJob.propTypes ={\r\n     job: PropTypes.object.isRequired, \r\n     goback: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Job;","export default __webpack_public_path__ + \"static/media/gallery1.9b8ad916.png\";","export default __webpack_public_path__ + \"static/media/gallery2.cd19bb9b.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './startups.css';\r\nimport { Spinner, Col, Container, Row, Carousel, Button} from 'react-bootstrap';\r\nimport {ArrowLeft, ArrowRightShort, Person, CircleFill} from 'react-bootstrap-icons';\r\n// import ReactPlayer from \"react-player\";\r\n\r\n// Import Job view\r\nimport Job from '../jobs/job';\r\n\r\n// Import pictures\r\nimport Teampic1 from '../images/gallery1.png';\r\nimport Teampic2 from '../images/gallery2.png';\r\n\r\n\r\nclass Startup extends React.Component {\r\n     constructor(props) {\r\n          super(props);\r\n          this.state =({\r\n            startups: this.props.startups,\r\n            view: 'startups',\r\n            id: null , //id number of the startup to open\r\n\r\n            hover: true\r\n          })\r\n          console.log(this.state.startups);\r\n        }\r\n\r\n\r\n        \r\n     componentDidMount(){\r\n          this.props.active();\r\n          document.title = 'See top startups';\r\n          window.scrollTo(0, 0);\r\n     }\r\n\r\n     componentWillUnmount(){\r\n          this.props.not_active();\r\n     }\r\n\r\n\r\n     // Render the startups in column view\r\n     startups = () => {  \r\n          return(\r\n               <div>\r\n                    <h1 className='startups-head'>Startups</h1>\r\n                    <Container fluid >\r\n                    <Row className='center col-startups-row'>\r\n                    {Object.values(this.state.startups).map((val, index)=>\r\n                              <Col className='col-startup ' key={index}  sm={5} >\r\n                                   <h3 className='col-startup-name' onClick={()=> {this.setState({view: 'startup', id: index})}}>{val.company_name}</h3>\r\n                                   <p className='col-startup-sm'>{val.location}</p>\r\n                                   <p className='col-startup-sm'>Established {val.year_established}</p>\r\n                                   <p>{val.snapshot}</p>\r\n                                   <Row>\r\n                                        <Col className='col-startup-sm' >{Object.values(val.category).map((v,i) => ` ${v} `)}</Col>\r\n                                        {/* {(val.jobs.length > 0) ? <Col className='col-startup-job' onClick={() => {this.setState({view: 'job', id: index})}}>{Object.keys(val.jobs).length} job</Col> :''} */}\r\n                                   </Row>\r\n                              </Col>\r\n                    )}\r\n                    </Row>\r\n                    </Container> \r\n               </div>\r\n          )\r\n     }\r\n\r\n      // Render the detailed view of a startup\r\n      startup = () => {\r\n          \r\n           var id = this.state.id;\r\n           var startup = Object.values(this.state.startups)[id];\r\n           document.title = `${startup.company_name} - StartVest`;\r\n          //  console.log(arr[id]);\r\n          return(\r\n               <div className='startups'>\r\n                    <Container fluid>\r\n                         <Row>\r\n                              <Col xs={1}><ArrowLeft className='icon-back' width={30} height={30} onClick={() =>{this.setState({view: 'startups'})}}/></Col>\r\n                              <Col sm='auto'><span className='logo'><img src={startup.logo} alt={startup.company_name + ' Logo'}/></span></Col>\r\n                              <Col sm='auto'><h3 className='startups-head'>{startup.company_name}</h3><p className='col-startup-sm'>{startup.location}</p></Col>\r\n                         </Row>\r\n                    </Container>\r\n                   <Container fluid className='description'>\r\n                    <Row>\r\n                         <Col md={'8'} sm='auto'>{startup.snapshot}</Col>\r\n                         <Col md='4' sm='auto' className='description-desc'>\r\n                         <Row ><Col>Website</Col><Col><a href={startup.website} className='link bold'>{startup.website}</a></Col></Row>\r\n                         <Row><Col>Staff Strength</Col><Col className='bold'>{startup.company_size}</Col></Row>\r\n                         <Row><Col>Founded</Col><Col className='bold'>{startup.year_established}</Col></Row>\r\n                         <Row><Col>Registered</Col ><Col className='bold'>{(startup.registered) ? 'Yes':'No'}</Col></Row>\r\n                         <Row><Col>Industry</Col><Col className='bold'>{Object.values(startup.category).map((v,i) => v )}</Col></Row>\r\n                         <Row><Col>Business Model</Col><Col className='bold'>{startup.business_model}</Col></Row>\r\n                         <Row><Col>Funding Stage</Col><Col className='bold'>{startup.funding_stage}</Col></Row>\r\n                         </Col>\r\n                    </Row>\r\n                   </Container>\r\n\r\n                        {/* Gallery Section */}\r\n                        <Container fluid>\r\n                         \r\n                         <Row>\r\n                         <Col sm={'auto'}>\r\n                         <h3 className=\"gallery-head\">Gallery</h3>\r\n                              {/* Add a .map function that loops throught the amount of picture given */}\r\n                              {(startup.gallery.length > 0) ? \r\n                                   \r\n                                   Object.values(startup.gallery).map((val,i) => \r\n                                   <Carousel className='gallery shadow' key={i}>\r\n                                   <Carousel.Item key={i}>\r\n                                        <span>{startup.gallery}</span>\r\n                                   <img\r\n                                        className=\"gallery-pic\"\r\n                                        src={val.image}\r\n                                        alt={ val.startup + ' slide ' + val.id }\r\n                                   />\r\n                                   <Carousel.Caption>\r\n                                        <h3>val.startup</h3>\r\n                                        <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                                   </Carousel.Caption>\r\n                                   </Carousel.Item>    \r\n                                   </Carousel>\r\n                                   )                               \r\n                              :<Carousel className='gallery shadow'><Carousel.Item>\r\n                              <img\r\n                                   className=\"gallery-pic\"\r\n                                   src={Teampic1}\r\n                                   alt=\"First slide\"\r\n                              />\r\n                              {/* <Carousel.Caption>\r\n                                   <h3>First slide label</h3>\r\n                                   <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                              </Carousel.Caption> */}\r\n                              </Carousel.Item>\r\n                              \r\n                              <Carousel.Item>\r\n                              <img\r\n                                   className=\"gallery-pic\"\r\n                                   src={Teampic2}\r\n                                   alt=\"Second slide\"\r\n                              />\r\n                             \r\n                              {/* <Carousel.Caption>\r\n                                   <h3>Second slide label</h3>\r\n                                   <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                              </Carousel.Caption> */}\r\n                              </Carousel.Item>\r\n                              </Carousel>}\r\n                         \r\n                         </Col>\r\n                         \r\n                         <Col sm={'auto'}>\r\n                         <h3 className=\"gallery-head\">{startup.company_name + ' pitch'}</h3>\r\n                         <img className='gallery-video' src={startup.pitch} alt={startup.company_name + ' pitch'}/>\r\n                         </Col>\r\n                         </Row>\r\n                         </Container>\r\n\r\n                         {/* Team Executives Section */}\r\n                         <Container>\r\n                              <Row>\r\n                                   <Col md={'auto'}>\r\n                                   <h3 className=\"gallery-head\">Key Executives</h3>\r\n                                   <Row>\r\n                                   {Object.values(startup.team).map((val, ind)=>\r\n                                   <Col key={ind}><p><span id='start-avatar'><Person color='white' margin={3} height={30} width={30}/></span></p><b>{val}</b><p>{val}</p></Col>      // <th key={ind}>{(val) ? val:' '}</th>\r\n                                   )} \r\n                                   </Row>\r\n                                   </Col>\r\n                                   \r\n\r\n                                   {/* Benefits of working */}\r\n                                   <Col md={'auto'}>\r\n                                        <h3 className=\"gallery-head\">Working at {startup.company_name}</h3>\r\n                                        <ul className='working-list'> \r\n                                             {startup.work_benefits.map((val, ind) => \r\n                                             <li key={ind}><CircleFill className='icon-back' height={10} width={10}/>  {val} </li>\r\n                                             )}\r\n                                        </ul>\r\n                                   </Col>\r\n                              </Row>\r\n                         </Container>\r\n\r\n                         {/* Send a mail */}\r\n                         <span className='btn-fill'><Button ><a href = {\"mailto: startup.email\"}>Send a mail</a><ArrowRightShort  height={25} width={25}/></Button></span>\r\n               </div>\r\n          )\r\n     }\r\n\r\n     renderview(){\r\n          switch(this.state.view){\r\n               default: return <div><Spinner className=\"load\"  animation='border' color='#21295C'/></div>\r\n                   case 'startups': return this.startups();\r\n                   case 'startup': return this.startup();\r\n                   case 'job': return <Job startup={Object.values(this.state.startups)[this.state.id]} goback={() =>{this.setState({view: 'startups'})}}/>;\r\n                   \r\n           }\r\n     }\r\n     render(){\r\n          return(\r\n          <div className='startups'>\r\n               {this.renderview()}               \r\n          </div>\r\n          )\r\n     }\r\n}\r\n\r\nStartup.propTypes = {\r\n     startups: PropTypes.array.isRequired,\r\n     active: PropTypes.func.isRequired,\r\n     not_active: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Startup;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './investors.css';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport {Person, CircleFill} from 'react-bootstrap-icons';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nclass investors extends React.Component {\r\n     constructor(props) {\r\n          super(props);\r\n          this.state =({\r\n               investors: this.props.investors,\r\n          })\r\n     }\r\n     \r\n     componentDidMount() {\r\n          this.props.active();\r\n          document.title = 'Find top investors - Startvest'\r\n          window.scrollTo(0, 0);\r\n     }\r\n\r\n     componentWillUnmount(){\r\n          this.props.not_active();\r\n     }\r\n\r\n     render(){\r\n          return(\r\n          <div>\r\n               <h1 className='investors-head'>Top Investors</h1>\r\n               {/* <h1 className='investors-head'>{this.state.investors}</h1> */}\r\n               <Container fluid>\r\n                    <Row>\r\n                    {Object.values(this.state.investors).map((val, ind) =>\r\n                    <Col sm={4} className='investor-column' key={ind}>\r\n                         <span id='inv-avatar' className='shadow'>{(val.profile_pic) ? <img src={val.profile_pic} alt='Investor profile'/> : <Person color='white'  height={60} width={60}/>} </span>\r\n                         <h3 className='investor-name'>{val.name}</h3>\r\n                         <p className='investor-industry'>{Object.values(val.interests).map((v,i) => <span key={i}>{v} <CircleFill className='icon-back' height={5} width={5}/>   </span>)} </p>\r\n                         <p>{val.detail}</p>\r\n                    </Col>\r\n                    )}\r\n                    </Row>\r\n               </Container>\r\n               \r\n          </div>\r\n          )\r\n     }\r\n}\r\n\r\ninvestors.propTypes = {\r\n     investors: PropTypes.array.isRequired,\r\n     active: PropTypes.func.isRequired,\r\n     not_active: PropTypes.func.isRequired\r\n}\r\nexport default investors;","export default __webpack_public_path__ + \"static/media/verify3.559f8f63.svg\";","import React, {useState, useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './profile.css';\r\n\r\nimport {Container, Row, Col, Form} from 'react-bootstrap';\r\n\r\nimport {X} from 'react-bootstrap-icons';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport VerifySVG from '../images/verify3.svg';\r\n\r\n\r\nfunction VerifyEmail({email, setVerify, close, checkForm}){\r\n     useEffect(() => {\r\n          document.title = 'Verify your email';\r\n     })\r\n     const [codes, setCodes] = useState({\r\n          '1': '',\r\n          '2': '',\r\n          '3': '',\r\n          '4': '',\r\n     });\r\n    \r\n     useEffect(() => {\r\n          document.getElementById('1').focus();\r\n     }, [])\r\n\r\n     const handleChange = (e)=>{\r\n          e.preventDefault();\r\n          if(e.target.value.length <= 1){\r\n               setCodes((values) => ({\r\n                    ...values,\r\n                    [e.target.name]: e.target.value ,\r\n               }));\r\n          }\r\n          if(e.target.value !== ''){\r\n               if(document.getElementById(String(Number(e.target.id)+1))){\r\n                    document.getElementById(String(Number(e.target.id)+1)).focus();\r\n               }\r\n          };\r\n     }\r\n\r\n     const checkcomplete = (e) =>{\r\n          // Verify is all the boxes have setValues\r\n          if(codes['1']  && codes['2'] && codes['3'] && codes['4']){\r\n               // Send a fetch request to the server\r\n               // As a different function on its own, so resend can use it\r\n               console.log(codes['1']  + codes['2'] + codes['3'] + codes['4']);\r\n               setVerify();\r\n               checkForm();         \r\n           }\r\n     }\r\n \r\n     return(\r\n          <Container className='box_design shadow'>\r\n               <div className='d-flex justify-content-between ' >\r\n               \r\n               {/* This is an unauthodox method to cnter the svg Icon */}\r\n               {/* Correct it later */}\r\n               <div id='no_disp'><X onClick={close} color={'#21295C'}  height={30} width={30} /></div>\r\n               \r\n               <div className='flex-fill'> <img src={VerifySVG} alt='Verify Email' className='vemail-logo '/></div>\r\n               \r\n               <div ><X onClick={close} color={'#21295C'} height={30} width={30} /></div>\r\n               </div>\r\n\r\n               <div className='vemail-head'>Verify your email address</div>\r\n               <div className='vemail-body'>\r\n                    To ensure that the email provided is real and belongs to you, \r\n                    we have to verify. Please confirm by enetring the 4-digit code sent to <span className='vemail-link'>{email}</span>\r\n               </div>\r\n\r\n                    <Container className='vemail-codes' >\r\n                  \r\n                    <Row className='justify-content-center'>\r\n                         {Object.values(codes).map((v,i)=> \r\n                         <Col lg={2} md={3} xs={3} key={i}>\r\n                              <Form.Control className='vemail-input' id={Number(i+1)} name={i+1} value={v} onChange={handleChange} onKeyUp={checkcomplete} max={'1'} type=\"number\" />\r\n                         </Col>\r\n                         )}\r\n                    </Row>\r\n                    </Container>\r\n               \r\n               <Container className='vemail-alt'>\r\n               \r\n                    It might take a minute to receive your email\r\n                    <p>Haven't received it? <span className='vemail-resend'>Resend Code</span></p>\r\n                   \r\n               </Container>\r\n              \r\n          </Container>\r\n     )\r\n}\r\n// optionalArray: PropTypes.array,\r\n// optionalBool: PropTypes.bool,\r\n// optionalFunc: PropTypes.func,\r\n// optionalNumber: PropTypes.number,\r\n// optionalObject: PropTypes.object,\r\n// optionalString: PropTypes.string,\r\n// optionalSymbol: PropTypes.symbol,\r\n\r\nVerifyEmail.propTypes={\r\n     email: PropTypes.string.isRequired,\r\n     setVerify: PropTypes.func.isRequired,\r\n     close: PropTypes.func.isRequired,\r\n     checkForm: PropTypes.func.isRequired\r\n}\r\nexport default VerifyEmail;","import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './profile.css';\r\nimport PropTypes from'prop-types';\r\n\r\n\r\nimport {Button, Form, Col, Row} from 'react-bootstrap';\r\nimport {Info} from 'react-bootstrap-icons';\r\n\r\n// Back button\r\n// import {} from 'react-bootstrap-icons';\r\n\r\n// Import Notifications\r\nimport Notifyer from '../utility/notification';\r\n\r\n// The proptypes for the function is below\r\nfunction StartupForm({registered, user_data, req, proceed}){\r\n    \r\n     useEffect(() => {\r\n          document.title = 'Register as a Startup';\r\n     })\r\n\r\n     const user = JSON.parse(user_data).user;\r\n     \r\n     const [values, setValues] =  useState({\r\n          'registered': true,\r\n          'name':'',\r\n          'email': user.email,\r\n          'verified': false,\r\n          'gallery': [],\r\n          'snapshot': '',\r\n          'company_size': 1,\r\n          'location': '',\r\n          'website': '',\r\n          'logo': [],\r\n          'team': [], //Team string\r\n          'work_benefits': '', //An array of strings\r\n          'pitch': [], //A video,\r\n          'category': '', //Array of strings\r\n          'business_model': 'B2C',\r\n          'balance': 0,\r\n          'year_established': 2021,\r\n          'funding_stage': 'Pre-seed'\r\n     });\r\n\r\n     \r\n     let years = [];\r\n     (function (){\r\n           // Create a dropdown of years from 1984\r\n     let startYear = 1984;\r\n     let endYear = new Date().getFullYear();\r\n     \r\n     for (let i=endYear; i>startYear; i--){\r\n          years.push(i);\r\n     }\r\n\r\n     })();\r\n\r\n\r\n      // Notification object\r\n      const [notify, setNotify] = useState({\r\n          err: false,\r\n          message: '',\r\n          type: '',\r\n          multiple: false\r\n     })    \r\n    \r\n    \r\n     // const req = () =>{\r\n     //      return(<span className='required'>*</span>)\r\n     // }\r\n\r\n     const handleChange = (e)=>{\r\n          e.preventDefault();\r\n          setValues((values) => ({\r\n               ...values,\r\n               [e.target.name]:e.target.type === 'checkbox' ? e.checked : e.target.value ,\r\n          }));\r\n     }\r\n\r\n     // const handleImage = (e) =>{\r\n     //      // On file select (from the pop up)\r\n     //    // Update the state\r\n     //      setValues((values) => ({\r\n     //           ...values,\r\n     //           [e.target.name]: e.target.files[0]\r\n     //      }));\r\n     // }\r\n\r\n     const handleSubmit = (e) => {\r\n\r\n          const formData = {\r\n               \"user\":{\r\n                    \"user\": {\r\n                         \"email\": user.email, \r\n                    },\r\n                    \"is_investor\":false,\r\n                    \"is_startup\":true,\r\n                    \"name\": values.name\r\n               },\r\n               \"jobs\":[],\r\n               // \"gallery\": values.gallery || null, //An Array of Images less than 1mb\r\n               \"company_name\": values.name,\r\n               \"snapshot\": values.snapshot,\r\n               \"company_size\": values.company_size,\r\n               \"location\": values.location,\r\n               \"website\": values.website,\r\n               // \"logo\": values.logo || null,\r\n               \"registered\": values.registered,\r\n               \"team\" : [],\r\n               \"work_benefits\": values.work_benefits.split(\",\"), \r\n               // \"pitch\": values.pitch || null,\r\n               \"category\": values.category.split(\",\"),\r\n               \"business_model\": values.business_model,\r\n               \"year_established\": parseInt(values.year_established),\r\n               \"funding_stage\": values.funding_stage\r\n          }\r\n\r\n          if(!formData.company_name || !formData.snapshot || !formData.location || !formData.website || !formData.category || !formData.business_model || !formData.year_established){\r\n               setNotify({err:true, message:'One or more required fields are empty', type:'danger'})\r\n          }else{\r\n               // Forward thinking Startup looking to change the game of fintech\r\n              \r\n               // Create a startup\r\n               const token = JSON.parse(user_data).access_token;\r\n               \r\n               const staging = 'https://startvest-staging.herokuapp.com/api/v1.0/';\r\n\r\n               fetch(`${staging}startups/${String(user.pk)}/create`, {\r\n                    method: 'POST', \r\n                    headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    'Content-Type': 'application/json',\r\n                    \r\n                    },\r\n                    body: JSON.stringify(formData),\r\n                    })\r\n                    .then(res => res.json())\r\n                    .then(data => { \r\n                         if(data.user === user.pk ){\r\n                              console.log(data);\r\n                              proceed();\r\n                         }else if(data.code === 'token_not_valid'){\r\n                              console.log('Return to the login screen or refresh the token')\r\n                         }\r\n                         else{\r\n                              setNotify({err:true, message:Object.values(data), type:'danger', multiple:true})\r\n                         }\r\n \r\n                    }).catch((error) =>{\r\n                         setNotify({err:true, message:Object.values(error), type:'danger', multiple:true})\r\n                    });\r\n          }\r\n\r\n\r\n          e.preventDefault();\r\n\r\n          // console.log(formData);\r\n     }\r\n\r\n   \r\n     return(\r\n          <div>\r\n                {(notify.err) ? <Notifyer className='notifyer' message={notify.message} type={notify.type} multiple={notify.multiple} onDismissed={() => setNotify({err: false})} /> : null}\r\n          <div className='form shadow'>\r\n               <Row>\r\n                    {/* <Col xs={1} >\r\n                         <ArrowLeft className='icon-back' width={30} height={30} onClick={this.props.goback}/>\r\n                    </Col> */}\r\n\r\n                    <Col>\r\n                         <h3 className=\"profile-head\">Register your startup</h3>\r\n                    </Col>\r\n               </Row>\r\n               <Form>\r\n\r\n               <Form.Group controlId=\"startupName\">\r\n               <Form.Label>Name of Startup {req}</Form.Label>\r\n               <Form.Control className='form-input' type=\"text\" placeholder=\"Enter Startup's name\" name='name' value={values.name} onChange={handleChange} />\r\n               </Form.Group>\r\n\r\n\r\n               <Form.Group controlId=\"startupEmail\">\r\n               <Form.Label>Email of Startup {req}</Form.Label>\r\n               <Form.Control className='form-input' type=\"email\" placeholder=\"Enter Startup's email address\" value={values.email} onChange={handleChange}/>\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId=\"startupEmail\">\r\n               <Form.Label>Brief description of the startup {req}</Form.Label>\r\n               <Form.Control className='form-input' as=\"textarea\" rows={2} name='snapshot' value={values.snapshot} onChange={handleChange} placeholder='Enter a brief description of the startup'/>\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId=\"startupNumber\">\r\n               <Form.Label>Number of employees</Form.Label>\r\n               <Form.Control className='form-input' type=\"number\" placeholder=\"Enter your staff Strength\" name='company_size' value={values.company_size} onChange={handleChange} />\r\n               </Form.Group>\r\n\r\n               \r\n               <Form.Group controlId=\"startupLocation\">\r\n               <Form.Label>Location of Startup {req}</Form.Label>\r\n               <Form.Control className='form-input' type=\"text\" placeholder=\"Enter Location\" name=\"location\" value={values.location} onChange={handleChange}/>\r\n               <Form.Text className=\"text-muted\">\r\n                   <Info width={20} height={20}/>Startup has to be located in Nigeria\r\n               </Form.Text>\r\n               </Form.Group>\r\n\r\n               {/* <Form.Group>\r\n                    <GooglePlacesAutocomplete selectProps={{\r\n               location,\r\n               onChange: setLocation,\r\n               }} apiKey={process.env.REACT_APP_MAPS_KEY} autocompletionRequest={{\r\n                    componentRestrictions: {\r\n                    country: ['ng'],\r\n                    }\r\n                  }}  onLoadFailed={(error) => (\r\n                    console.error(\"Could not inject Google script\", error)\r\n                  )}/>\r\n               </Form.Group> */}\r\n\r\n               <Form.Group controlId=\"startupWebsite\">\r\n               <Form.Label>Website Address {req}</Form.Label>\r\n               <Form.Control className='form-input' type=\"url\" placeholder=\"https://example.com\" pattern=\"http(s?)(:\\/\\/)((www.)?)(([^.]+)\\.)?([a-zA-z0-9\\-_]+)(\\/[^\\s]*)?\"  name='website' value={values.website} onChange={handleChange} />\r\n               </Form.Group>\r\n\r\n               {/* <Form.Group>\r\n               <Form.File id=\"startuplogo\" label=\"Startup's Logo\" accept=\".gif,.jpg,.jpeg,.png,\" name='logo' onChange={handleImage}/>\r\n               </Form.Group> */}\r\n\r\n               {/* <Form.Group >\r\n               <Form.File id=\"startupGallery\" label=\"Gallery\" accept=\".gif,.jpg,.jpeg,.png,\" multiple name='gallery' onChange={handleImage}/>\r\n               <Form.Text className=\"text-muted\">\r\n                   <Info width={20} height={20}/>Choose multiple image files, less than 2mb each\r\n               </Form.Text>\r\n               </Form.Group> */}\r\n\r\n               <Form.Group controlId=\"startupBenefits\">\r\n               <Form.Label>Work Benefits</Form.Label>\r\n               <Form.Control className='form-input' type=\"text\" placeholder=\"Enter the benefits of employees seperated by a comma\" name='work_benefits' value={values.work_benefits} onChange={handleChange} />\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId=\"startupCreated\">\r\n               <Form.Label>Year founded</Form.Label>\r\n               <Form.Control as=\"select\" name='year_established' value={values.year_established} onChange={handleChange}>\r\n               {years.map((y, i) => <option key={i}>{y}</option>)}\r\n               </Form.Control>\r\n               </Form.Group>\r\n\r\n\r\n               {/* <Form.Group>\r\n               <Form.File id=\"startupPitch\" label=\"Startup's pitch\" accept=\".webm ,.mpg, .mp2, .mpeg, .mpe, .mpv ,.ogg ,.mp4, .m4p, .m4v ,.avi ,.wmv ,.mov, .qt ·.flv, .mkv\" name='pitch' onChange={handleImage}/>\r\n               </Form.Group> */}\r\n\r\n               <Form.Group controlId=\"startupIndustry\">\r\n               <Form.Label>Industry {req}</Form.Label>\r\n               <Form.Control className='form-input' type=\"text\" placeholder=\"Enter categories seperated by a comma\" name='category' value={values.category} onChange={handleChange}/>\r\n               </Form.Group>\r\n\r\n               <Form.Group>\r\n               <Form.Label>Business Model {req}</Form.Label>\r\n               <Form.Control as=\"select\" name='business_model' value={values.business_model} onChange={handleChange}>\r\n               <option>B2C</option>\r\n               <option>B2B</option>\r\n               <option>C2C</option>\r\n               <option>C2B</option>\r\n               </Form.Control>\r\n               </Form.Group>\r\n\r\n               <Form.Group>\r\n               <Form.Label>Funding Stage {req}</Form.Label>\r\n               <Form.Control as=\"select\" name='funding_stage' value={values.funding_stage} onChange={handleChange}>\r\n               <option>Pre-seed</option>\r\n               <option>Series A</option>\r\n               <option>Series B</option>\r\n               <option>Series C</option>\r\n               </Form.Control>\r\n               </Form.Group>\r\n\r\n\r\n               <span className='submit'>\r\n               <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>Submit</Button>\r\n               </span>\r\n               </Form>\r\n          </div>\r\n          </div>\r\n     )\r\n\r\n}\r\n\r\nStartupForm.propTypes = {\r\n     registered: PropTypes.bool, \r\n     user_data: PropTypes.object.isRequired,\r\n     req: PropTypes.func, \r\n     proceed: PropTypes.func\r\n}\r\n\r\nexport default StartupForm;","import React, {useState, useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './profile.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Button, Form, Col, Row} from 'react-bootstrap';\r\n\r\n// Import Notifications\r\nimport Notifyer from '../utility/notification';\r\n\r\nfunction InvestorForm ({proceed, user_data, registered}){\r\n\r\n     useEffect(() => {\r\n          document.title = 'Register as an Investor';\r\n     })\r\n     \r\n     const user = JSON.parse(user_data).user;\r\n     \r\n     const [values, setValues] =  useState({\r\n          'registered': registered || false,\r\n          'name':'',\r\n          'interests':[],\r\n          'verified': false,\r\n          'profile_picture': [],\r\n          'detail': ''\r\n     });\r\n\r\n     // Notification object\r\n     const [notify, setNotify] = useState({\r\n          err: false,\r\n          message: '',\r\n          type: '',\r\n          multiple: false\r\n     })\r\n\r\n     const handleChange = (e)=>{\r\n          e.preventDefault();\r\n          setValues((values) => ({\r\n               ...values,\r\n               [e.target.name]:e.target.type === 'checkbox' ? e.checked : e.target.value ,\r\n          }));\r\n     };\r\n\r\n\r\n     // const handleImgae = (e) =>{\r\n     //      // On file select (from the pop up)\r\n     //    // Update the state\r\n     //      setValues((values) => ({\r\n     //           ...values,\r\n     //           profile_picture: e.target.files[0]\r\n     //      }));\r\n     // }\r\n    \r\n     const handleSubmit = (e) => {\r\n          e.preventDefault();\r\n          if(!values.name || !values.detail || !values.profile_picture){\r\n               setNotify({err:true, message:'Fill in empty inputs', type:'danger'})\r\n\r\n          }else if(values.profile_picture.size/1024/1024 > 1){ //If the Image size is greater than 1mb, give an error\r\n               setNotify({err:true, message:'The file limit has been exceeded', type:'danger'})\r\n\r\n          }else{\r\n               const formData = {\r\n                    \"user\" : {\r\n                         \"user\":{\r\n                              \"email\": user.email\r\n                          },\r\n                          \"is_investor\": true,\r\n                          \"is_startup\": false,\r\n                          \"name\": values.name\r\n                    },\r\n                    \"registered_business\": true,               \r\n                    \"interests\": values.interests.split(','),\r\n                    \"verified\": false,\r\n                    \"name\":  values.name,\r\n                    // \"profile_pic\": values.profile_picture,\r\n                    \"detail\": values.detail\r\n                    // I would like dedicated founders who are looking to solve real world problems\r\n                    // \"Technology\",\"E-commerce\", \"BlocChian\", \"Artificial Intelligence\"\r\n               }\r\n\r\n               const token = JSON.parse(user_data).access_token;\r\n               \r\n               const staging = 'https://startvest-staging.herokuapp.com/api/v1.0/';\r\n              \r\n               fetch(`${staging}investors/${user.pk}/create`, {\r\n                    method: 'POST', \r\n                    headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    'Content-Type': 'application/json',\r\n                    \r\n                    },\r\n                    body: JSON.stringify(formData),\r\n                    })\r\n                    .then(res => res.json())\r\n                    .then(data => { \r\n                         // console.log(data);\r\n                         proceed();\r\n\r\n                    }).catch((error) =>{\r\n                         setNotify({err:true, message:Object.values(error), type:'danger', multiple:true})\r\n                    });\r\n               \r\n          }\r\n          \r\n     }\r\n\t\r\n\r\n\r\n     return(\r\n          <div>\r\n                {(notify.err) ? <Notifyer className='notifyer' message={notify.message} type={notify.type} multiple={notify.multiple} onDismissed={() => setNotify({err: false})} /> : null}\r\n          <div className='form shadow'>\r\n               <Row>\r\n                    {/* <Col xs={1} >\r\n                         <ArrowLeft className='icon-back' width={30} height={30} onClick={goback}/>\r\n                    </Col> */}\r\n\r\n                    <Col>\r\n                    <h3 className=\"profile-head\">Register as an Investor</h3>\r\n                    </Col>\r\n               </Row>\r\n               \r\n               <Form>\r\n\r\n               <Form.Group controlId=\"Investorname\">\r\n               <Form.Label>Full name</Form.Label>\r\n               <Form.Control className='form-input' name='name' value={values.name} onChange={handleChange} type=\"text\" placeholder=\"Enter Investor's name\" autoComplete='name'/>\r\n               </Form.Group>\r\n\r\n            \r\n               <Form.Group controlId=\"Industries\">\r\n               <Form.Label>Category of target Startups</Form.Label>\r\n               <Form.Control className='form-input' type=\"text\" name='interests' value={values.interests} onChange={handleChange} placeholder=\"Industries seperated by a comma\" />\r\n               </Form.Group>\r\n\r\n\r\n               <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n               <Form.Label>Brief description of Investor</Form.Label>\r\n               <Form.Control className='form-input' as=\"textarea\" rows={2} name='detail' value={values.detail} onChange={handleChange}/>\r\n               </Form.Group>\r\n\r\n               {/* <Form.Group controlId=\"ProfilePic\">\r\n               <Form.Label>Your Profile Picture</Form.Label>\r\n               <Form.File id=\"exampleFormControlFile1\"  type='file' accept=\".gif,.jpg,.jpeg,.png,\" onChange={handleImgae}/>\r\n               </Form.Group> */}\r\n\r\n               <span className='submit'>\r\n               <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\r\n               Submit\r\n               </Button>\r\n               </span>\r\n\r\n               </Form>\r\n          </div>\r\n          </div>\r\n     )\r\n}\r\n\r\nInvestorForm.propTypes ={\r\n     proceed: PropTypes.func.isRequired, \r\n     user_data: PropTypes.object.isRequired, \r\n     registered: PropTypes.bool\r\n}\r\n\r\nexport default InvestorForm;","export default __webpack_public_path__ + \"static/media/login.1523a620.svg\";","export default __webpack_public_path__ + \"static/media/sign_in.7e270e9a.svg\";","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// Css File\r\nimport './dashboard.css';\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n     constructor(props) {\r\n          super(props);\r\n          this.state =({\r\n               alert: false,\r\n               position: 'top-right',\r\n               notify: false,\r\n               external: false\r\n          })\r\n     }\r\n\r\ncomponentDidMount(){\r\n     window.scrollTo(0, 0);\r\n}\r\n\r\nrender() {\r\n     return(\r\n          <div>  \r\n               <div className=\"teamHead\">\r\n               The dashboard \r\n               </div>\r\n               <h3>Welcome</h3>\r\n          </div>\r\n     )\r\n}}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport './profile.css';\r\nimport PropTypes from 'prop-types';\r\nimport { Container, Row, Col, Form, Spinner, Button, InputGroup } from 'react-bootstrap';\r\nimport { Eye, EyeSlash } from 'react-bootstrap-icons';\r\n\r\n//Import the verify email screen\r\nimport VerifyEmail from './verifyEmail';\r\n\r\n// The startup and investors form\r\nimport StartForm from './startupForm';\r\nimport InvestorForm from './investorForm';\r\n\r\n// Loading animation\r\nimport { css } from \"@emotion/react\";\r\nimport SyncLoader from \"react-spinners/SyncLoader\";\r\n\r\n// SVG Images used\r\n// import TeamPic from '../images/team_3.svg';\r\nimport Login from '../images/login.svg';\r\nimport SignUp from '../images/sign_in.svg';\r\n\r\n\r\n// Import Notifications\r\nimport Notifyer from '../utility/notification';\r\n\r\n// Import Dashboard\r\nimport Dashboard from '../dashboard/dashboard';\r\nclass profile extends React.Component {\r\n     constructor (props) {\r\n          super(props);\r\n          this.state = ({\r\n               user: [],\r\n               emailVerify: false,\r\n               state: 'signup',\r\n               registered: false,//If the user is a new user\r\n               is_startup: true,\r\n\r\n               // Login or signup\r\n               signup: false,\r\n\r\n               // Form fields initialised here\r\n                    // st the default values of the radio buttons\r\n               check2: true, //Making the radio of startup true\r\n               check1: false,\r\n               username: '',\r\n               email: '',\r\n               password: '',\r\n               check: '',\r\n\r\n               // Disable multiple notificationns by default\r\n               multiple:false,\r\n\r\n               // Set the state of password in the login and signup fields\r\n               show_pass: false,\r\n          });\r\n     }\r\n\r\n     // override css file for loading bar\r\n     override = css`\r\n          display: block;\r\n          margin: auto;\r\n          `;\r\n\r\n     componentDidMount(){\r\n          document.title = 'Get started at StartVest'\r\n          window.scrollTo(0, 0);\r\n          this.mounted = true;\r\n \r\n     // this.mounted is a way to ensure that \r\n     // there is no meomry leakasge for the self initialised function\r\n      if (this.mounted) {\r\n           (() =>{\r\n          // Check if the user is still signed in, then gives the form  \r\n          // Set loading spinner\r\n          this.setState({state: 'load'});\r\n\r\n          const token = localStorage.getItem('user_token');\r\n          const staging = 'https://startvest-staging.herokuapp.com/api/v1.0/';\r\n\r\n               fetch(`${staging}users/token/verify/`, {\r\n                    method: 'POST', \r\n                    headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                         \"token\": token,\r\n                    }),\r\n               })\r\n                    .then(res => res.json())\r\n                    .then(data => { \r\n                         \r\n                         if(data.code === \"token_not_valid\"){\r\n                              localStorage.removeItem('user_token')\r\n                              localStorage.removeItem('is_startup');\r\n                              localStorage.removeItem('registered');\r\n                              localStorage.removeItem('user_data');\r\n\r\n                              this.setState({state: 'signup'});\r\n                         }else{\r\n                              \r\n                         // Stores the user data in the local storage\r\n                         var sta_inv = (localStorage.getItem('is_startup').toLowerCase() === 'true') ? 'startups' : 'investors';\r\n                         \r\n                         this.setState({is_startup: (localStorage.getItem('is_startup').toLowerCase() === 'true'), user_data: localStorage.getItem('user_data')});\r\n\r\n                         \r\n                         // Get the registered field from the startup using a short fetch request\r\n                         fetch(`${staging}${sta_inv}/${JSON.parse(localStorage.getItem('user_data')).user.pk}`,{\r\n                              method: 'GET', \r\n                              headers:{\r\n                                   Authorization: `Bearer ${token}`\r\n                              }})\r\n                         .then(response => response.json())\r\n                         .then(startup => {\r\n                              var registered = (localStorage.getItem('is_startup').toLowerCase() === 'true') ? startup.registered: startup.verified;\r\n                              this.setState({state: 'auth', registered: registered}); \r\n                              \r\n                         }).catch((error) => {this.setState({state: 'auth', registered: false}) });\r\n\r\n                         \r\n                         }\r\n                    }).catch((error) =>{\r\n                         console.log(error);\r\n\r\n                         this.setState({state: 'signup'});\r\n                    });\r\n               \r\n     })();\r\n}\r\n     \r\n        \r\n     }\r\n     \r\n     componentWillUnmount(){\r\n          this.mounted = false;\r\n     }\r\n\r\n     handlecheckbox = ({target}) => {\r\n          if(target.name === 'check1'){\r\n               this.setState({[target.name]: target.checked , check2: !target.checked});\r\n          }else{\r\n               this.setState({[target.name]: target.checked , check1: !target.checked});\r\n          }\r\n          \r\n     };\r\n\r\n     handleChange = ({ target }) => {\r\n          this.setState({[target.name]: target.type === 'checkbox' ? target.checked : target.value });\r\n     };\r\n\r\n     handlePassChange = () =>{\r\n          this.setState({show_pass: !this.state.show_pass})\r\n     }\r\n \r\n      // Function to get data from the form and \r\n     // send a notification if any of them is empty\r\n     checkSignForm = (e) =>{\r\n          if (e){e.preventDefault()};\r\n\r\n          // Set the login button to load\r\n          this.setState({loading: true});\r\n\r\n          let signupfields = {\r\n               investor: this.state.check1, \r\n               startup: this.state.check2, \r\n               name: this.state.username,\r\n               email: this.state.email,\r\n               password: this.state.password,\r\n               forgotpass: this.state.check\r\n          }\r\n\r\n         if(!signupfields.name || !signupfields.email || !signupfields.password){\r\n          this.setState({error: true, errMessage:'One or more required fields are empty', type:'danger', loading:false})\r\n       \r\n          }else if(!this.state.emailVerify){\r\n               window.scrollTo(0, 0);\r\n               this.setState({loading: false, state: 'verifyEmail'});\r\n\r\n               console.log(this.state.emailVerify);\r\n\r\n          }else if(this.state.emailVerify){\r\n                    const staging =  'https://startvest-staging.herokuapp.com/api/v1.0/';\r\n\r\n                    fetch(`${staging}users/registration/`, {\r\n                              method: 'POST', \r\n                              headers: {\r\n                              'Content-Type': 'application/json',\r\n                              },\r\n                              body: JSON.stringify({\r\n                                        \"username\": signupfields.name,\r\n                                        \"email\": signupfields.email,\r\n                                        \"password1\": signupfields.password,\r\n                                        \"password2\": signupfields.password\r\n                                   }),\r\n                              })\r\n                              .then(res => res.json())\r\n                              .then(data => {    \r\n                                   // console.log(data); \r\n                                   if(data.access_token){\r\n                                        // Stores the token in the local storage\r\n                                        localStorage.setItem('user_token', data.access_token);\r\n                                        localStorage.setItem('user_data', JSON.stringify(data));\r\n\r\n                                   fetch(`${staging}users/create_user_type/${data.user.pk}`, {\r\n                                        method: 'POST', \r\n                                        headers: {\r\n                                        Authorization: `Bearer ${data.access_token}`,\r\n                                        'Content-Type': 'application/json',\r\n                                        },\r\n                                        body: JSON.stringify({\r\n                                                  \"name\": signupfields.name,\r\n                                                  \"is_investor\": signupfields.investor,\r\n                                                  \"is_startup\": signupfields.startup,\r\n                                                  }),\r\n                                        })\r\n                                        .then(response => response.json())\r\n                                        .then(data => {    \r\n                                             console.log(data); \r\n                                             // Show notification message\r\n                                             this.setState({error: true, errMessage:'Signed up successfully!', type:'success'})\r\n\r\n                                             // Change View\r\n                                             this.setState({is_startup : data.is_startup, state:'auth', registered:data.verified, user_data: localStorage.getItem('user_data'), loading:false})\r\n\r\n                                              // Stores the user data in the local storage\r\n                                              localStorage.setItem('is_startup', data.is_startup);\r\n                                              localStorage.setItem('registered', data.verified)\r\n                                              \r\n                                        })\r\n                                        .catch((error) => {\r\n                                        console.error('Error:', error);\r\n                                        this.setState({error: true, errMessage:'Unable to assign status, Server Error', type:'danger', loading:false})\r\n                                       \r\n                                        // Deletes the token from local storage\r\n                                        localStorage.removeItem('user_token');\r\n                                   });\r\n                              }else{\r\n                                   this.setState({error: true, errMessage: Object.values(data), type:'danger', multiple:true, loading:false});\r\n                                   // Deletes the token from local storage\r\n                                   localStorage.removeItem('user_token');\r\n                              }\r\n                              })\r\n                              .catch((error) => {\r\n                              console.error('Error:', error);\r\n                              // this.setState({error: true, errMessage:Object.values(error).map((v,i) => v), type:'danger'})\r\n                              this.setState({error: true, errMessage:'Unable to sign you in, please try again later', type:'danger', loading:false})\r\n\r\n                              // Deletes the token from local storage\r\n                              localStorage.removeItem('user_token');\r\n                         });\r\n\r\n\r\n          }\r\n     }\r\n\r\n     checkloginForm = (e) =>{\r\n          if (e){e.preventDefault()};\r\n\r\n          // Set the login button to load\r\n          this.setState({loading: true});\r\n\r\n          let loginFields={\r\n               email: this.state.email,\r\n               password: this.state.password\r\n          }\r\n\r\n          if(!loginFields.email || !loginFields.password){\r\n               this.setState({error: true ,errMessage:'One or more required fields are empty', type:'danger', loading: false})\r\n\r\n          }else{\r\n               const staging =  'https://startvest-staging.herokuapp.com/api/v1.0/';\r\n\r\n                    fetch(`${staging}users/login/`, {\r\n                              method: 'POST', \r\n                              headers: {\r\n                              'Content-Type': 'application/json',\r\n\r\n                              },\r\n                              body: JSON.stringify({\r\n                                        \"username\": loginFields.name,\r\n                                        \"email\": loginFields.email,\r\n                                        \"password\": loginFields.password,}),\r\n                              })\r\n                              .then(response => response.json())\r\n                              .then(data => {    \r\n                                   if(data.access_token){\r\n                                        // Stores the token in the local storage\r\n                                   localStorage.setItem('user_token', data.access_token);\r\n                                   localStorage.setItem('user_data', JSON.stringify(data));\r\n                                        let id = data.user.pk;\r\n                                        let token = data.access_token;\r\n\r\n                                   fetch(`${staging}users/get_user_type/${id}`, {\r\n                                        method: 'GET', \r\n                                        headers:{\r\n                                             Authorization: `Bearer ${token}`\r\n                                        }})\r\n                                        .then(response => response.json())\r\n                                        .then(data => {    \r\n                                             \r\n                                             // Notification bar\r\n                                             this.setState({error: true, errMessage:'Logged in successfully!', type:'success'})\r\n                                            \r\n                                             // Set the data to the state First\r\n                                             this.setState({is_startup : data.is_startup, user_data: localStorage.getItem('user_data')}) ;\r\n                                             \r\n                                             // Get the registered field from the startup using a short fetch request\r\n                                             var sta_inv = (data.is_startup) ? 'startups' : 'investors';\r\n                                             \r\n                                             fetch(`${staging}${sta_inv}/${id}`,{\r\n                                                  method: 'GET', \r\n                                                  headers:{\r\n                                                       Authorization: `Bearer ${token}`\r\n                                                  }})\r\n                                             .then(response => response.json())\r\n                                             .then(startup => {\r\n                                                    \r\n                                                  var registered = (data.is_startup) ? startup.registered: startup.verified;\r\n\r\n                                                  this.setState({state: 'auth', registered: registered, loading:false});\r\n                                                  // startup.verified\r\n                                                  \r\n                                             }).catch((error) => {this.setState({state: 'auth', registered: false, loading:false}) });\r\n\r\n                                             // Stores the user data in the local storage\r\n                                             localStorage.setItem('is_startup', data.is_startup);\r\n                                             localStorage.setItem('registered', data.verified)\r\n\r\n                                        })\r\n                                        .catch((error) => {\r\n                                        console.error('Error:', error);\r\n                                        this.setState({error: true, errMessage:'Unable to get status, Server Error', type:'danger', loading:false})\r\n\r\n                                        // Deletes the token from local storage\r\n                                        localStorage.removeItem('user_token');\r\n                                   });\r\n                              }else{\r\n                                   this.setState({error: true, errMessage: Object.values(data), type:'danger', multiple:true, loading:false});\r\n\r\n                                   // Deletes the token from local storage\r\n                                   localStorage.removeItem('user_token');\r\n                              }\r\n                              })\r\n                              .catch((error) => {\r\n                              console.error('Error:', error);\r\n                              this.setState({error: true, errMessage:'Internet Disconnected!', type:'danger', loading:false});\r\n\r\n                              // Deletes the token from local storage\r\n                              localStorage.removeItem('user_token');\r\n                         });\r\n          }\r\n     }\r\n\r\n     // Astericks for required fields \r\n     required = () =>{\r\n          return(<span className='required'>*</span>)\r\n     }\r\n\r\n     \r\n     //   Render the login screen\r\n     login = () => {\r\n          return (\r\n               <div>\r\n                    <Container className='form '>\r\n                         <Row className='form_box shadow-lg'>\r\n                              <Col className='svgIcon' ><img src={ Login } className='svgIcon-image' height={300} width={300} alt=\"Team pic svg\" /></Col>\r\n                              <Col className='form_items'>\r\n                                   <h2>Login</h2>\r\n                                   <Form autoComplete='on'>\r\n                                        <Form.Row>\r\n                                             <Form.Group as={ Col } controlId=\"loginEmail\">\r\n                                                  <Form.Label>Email {this.required()}</Form.Label>\r\n                                                  <Form.Control name='email' autoComplete=\"email\" onChange={ this.handleChange } value={ this.state.email } className='shadow-sm textbox' type=\"email\" placeholder=\"Enter email\" required/>\r\n                                             </Form.Group>\r\n                                        </Form.Row>\r\n\r\n                                        <Form.Row>\r\n                                             <Form.Group as={ Col } controlId=\"loginPassword\">\r\n                                                  <Form.Label  > Password {this.required()}</Form.Label>\r\n                                                  <InputGroup>\r\n                                                       <Form.Control name='password' autoComplete=\"current-password\" onChange={ this.handleChange } value={ this.state.password } className='shadow-sm textbox' placeholder=\"Enter password\" required type={(this.state.show_pass) ? 'text' : 'password'}/>\r\n                                                  </InputGroup>\r\n                                             </Form.Group>\r\n                                        </Form.Row>\r\n\r\n                                        <Form.Group as={ Row } controlId=\"loginCheck\">\r\n                                             <Col>\r\n                                                  <Form.Check name='check' onChange={ this.handleChange } value={ this.state.check } label=\"Remember me\" checked={ this.state.check } />\r\n                                             </Col>\r\n                                             <Form.Label className='forgot'>Forgot Password?</Form.Label>\r\n                                        </Form.Group>\r\n\r\n\r\n\r\n                                        <Form.Group as={ Row }>\r\n                                             <Col className='submit'>\r\n                                                  <Button type=\"submit\" onClick={ this.checkloginForm }> {(this.state.loading) ? <SyncLoader color={'#21295C'} loading={this.state.loading} css={this.override} size={7} margin={5} speedMultiplier={0.8} /> : 'Login'} </Button>\r\n                                             </Col>\r\n                                        </Form.Group>\r\n                                        { this.altLogin(false) }\r\n                                   </Form>\r\n                              </Col>\r\n                         </Row>\r\n                    </Container>\r\n               </div>\r\n          );\r\n     };\r\n\r\n     \r\n     //   Render the signin screen\r\n     Signin = () => {\r\n          return (\r\n               <div>\r\n                    <Container className='form' fluid='md'>\r\n                         <Row className='form_box shadow-lg'>\r\n                              <Col className='svgIcon' md={6} sm={12}><img src={ SignUp } className='svgIcon-image' height={300} width={300}  alt=\"Team pic svg\" /></Col>\r\n                              <Col className='form_items' md={6} sm={12}>\r\n                                   <h2>Sign Up</h2>\r\n                                   <Form >\r\n                                        <Form.Group as={ Row } className='user_type' >\r\n                                             <Col > \r\n                                             <Form.Check\r\n                                                       name='check1'\r\n                                                       type=\"radio\"\r\n                                                       id=\"custom-switch1\"\r\n                                                       label='Investor'\r\n                                                       onChange={ this.handlecheckbox }\r\n                                                       checked={ this.state.check1 }\r\n                                                  />\r\n                                             </Col>\r\n                                             <Col > <Form.Check\r\n                                                       name='check2'\r\n                                                       type=\"radio\"\r\n                                                       id=\"custom-switch2\"\r\n                                                       label='Startup'\r\n                                                       onChange={ this.handlecheckbox }\r\n                                                       checked={ this.state.check2 }\r\n                                                  /></Col>\r\n                                        </Form.Group>\r\n\r\n\r\n                                        <Form.Row>\r\n                                             <Form.Group as={ Col } controlId=\"SignUsername\">\r\n                                                  <Form.Label  > {(this.state.check1)? 'Investor name' : 'Startup name'} {this.required()}</Form.Label>\r\n                                                  <Form.Control name='username' onChange={ this.handleChange } value={ this.state.username } className='shadow-sm textbox' type=\"text\" placeholder={(this.state.check1)? 'Enter investor\\'s name' : 'Enter Business name'} required/>\r\n                                             </Form.Group>\r\n                                        </Form.Row>\r\n\r\n\r\n                                        <Form.Row>\r\n                                             <Form.Group as={ Col } controlId=\"signEmail\">\r\n                                                  <Form.Label>Email {this.required()}</Form.Label>\r\n                                                  <Form.Control name='email'  onChange={ this.handleChange } value={ this.state.email } className='shadow-sm textbox' type=\"email\" placeholder=\"Enter email\" required/>\r\n                                             </Form.Group>\r\n                                        </Form.Row>\r\n\r\n\r\n                                        <Form.Row>\r\n                                             <Form.Group as={ Col } controlId=\"signPassword\">\r\n                                                  <Form.Label  > Password {this.required()}</Form.Label>\r\n                                                  <InputGroup>\r\n                                                       <Form.Control name='password' onChange={ this.handleChange } value={ this.state.password } className='shadow-sm textbox'  type={(this.state.show_pass) ? 'text' : 'password'} placeholder=\"Enter password\" required/>\r\n                                                       <InputGroup.Text className='pass-eye shadow-sm' onClick={this.handlePassChange}> {(this.state.show_pass) ? <Eye color={'#21295C'} height={20} width={20}/> : <EyeSlash color={'#21295C'} height={20} width={20}/>} </InputGroup.Text>\r\n                                                  </InputGroup>\r\n                                                  <Form.Text id=\"passwordHelpBlock\" muted>\r\n                                                  Your password must be 8-20 characters long, contain letters and numbers, and\r\n                                                  must not contain spaces, special characters, or emoji.\r\n                                                  </Form.Text>\r\n\r\n                                             </Form.Group>\r\n                                        </Form.Row>\r\n\r\n                                        {/* <Form.Row>\r\n                                             <Form.Group as={ Col } controlId=\"signPassword2\">\r\n                                                  <Form.Label  > Confirm Password</Form.Label>\r\n                                                  <Form.Control name='password2' autoComplete=\"new-password\" onChange={ this.handleChange } value={ this.state.password2 } className='shadow-sm textbox' type=\"password\" placeholder=\"Confirm password\" required/>\r\n                                             </Form.Group>\r\n                                        </Form.Row> */}\r\n\r\n\r\n                                        <Form.Group as={ Row } controlId=\"signCheck\">\r\n                                             <Col>\r\n                                                  <Form.Check name='check' onChange={ this.handleChange } value={ this.state.check } label=\"Remember me\" />\r\n                                             </Col>\r\n                                             <Form.Label className='forgot'>Forgot Password?</Form.Label>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={ Row }>\r\n                                             <Col className='submit'>\r\n                                                  <Button type=\"submit\" onClick={this.checkSignForm}> {(this.state.loading) ? <SyncLoader color={'#21295C'} loading={this.state.loading} css={this.override} size={7} margin={5} speedMultiplier={0.8} /> : 'Sign Up'}</Button>\r\n                                             </Col>\r\n                                        </Form.Group>\r\n\r\n                                        { this.altLogin(true) }\r\n\r\n                                   </Form>\r\n                              </Col>\r\n                         </Row>\r\n                    </Container>\r\n               </div>\r\n          );\r\n     };\r\n\r\n     altLogin = (signup = false) => {\r\n          return (\r\n               <div>\r\n                    {/* <Form.Group as={ Row } controlId=\"formHorizontalAltLogin\">\r\n                         <Col >{ (signup) ? 'Sign up with: ' : 'Login with: ' }</Col>\r\n                         <Col><div className='google-signin'><Google className='icons' />{ (signup) ? 'Google  ' : 'Google ' }</div></Col>\r\n                    </Form.Group> */}\r\n\r\n\r\n                    {(signup) ?\r\n                         <Form.Group as={ Row }>\r\n                              <Col>\r\n                                   Already have an account? <span className='forgot' onClick={ () => { this.setState({ signup: false }); } }>Login</span>\r\n                              </Col>\r\n                         </Form.Group>\r\n                         :\r\n                         <Form.Group as={ Row }>\r\n                              <Col >\r\n                                   Don't have an account? <span className='forgot' onClick={ () => { this.setState({ signup: true }); } }>Sign up</span>\r\n                              </Col>\r\n                         </Form.Group>\r\n                    }\r\n\r\n               </div>\r\n          );\r\n     };\r\n\r\n     \r\n     // Render the \r\n     renderview() {\r\n          switch (this.state.state) {\r\n               default: return <Container className=\"box_design shadow-sm\"><Spinner className=\"load\" animation='border' color='#21295C' /></Container>;\r\n               case 'load': return <div><Spinner className=\"load\" animation='border' color='#21295C' /></div>;\r\n               case 'signup': return (this.state.signup) ? this.Signin() : this.login();\r\n               case 'auth': return (this.state.registered) ? <Dashboard/> : (this.state.is_startup) ? <StartForm  user_data={this.state.user_data} registered={this.state.registered} req={this.required()} proceed={() => {this.setState({state: 'auth', registered: true})}}/> : <InvestorForm  is_startup={this.state.is_startup} req={this.required()}  user_data={this.state.user_data} registered={this.state.registered} proceed={() => {this.setState({state: 'auth', registered: true})}}/> ; \r\n               case 'verifyEmail': return  <VerifyEmail email={this.state.email} close={() => {this.setState({state: 'signup', signup: true, emailVerify:false})} } setVerify={() => this.setState({emailVerify:true, state: 'signup', signup: true, error:true, errMessage:'Verified Email Successfully', type:'success'})} checkForm={() => this.checkSignForm()}/>     \r\n          }\r\n     }\r\n\r\n\r\n     render() {\r\n          return (\r\n               <div className=\"profile\">\r\n                    {(this.state.error) ? <Notifyer message={this.state.errMessage} type={this.state.type} multiple={this.state.multiple} onDismissed={() => this.setState({error: false})} />:null}\r\n                    {this.renderview() }\r\n                    {this.state.live}\r\n               </div>\r\n          );\r\n     }\r\n}\r\n\r\nprofile.propTypes = {\r\n     active: PropTypes.func.isRequired,\r\n     not_active: PropTypes.func.isRequired\r\n}\r\n\r\nexport default profile;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './jobs.css';\r\nimport { Row, Col , Container, Spinner} from 'react-bootstrap';\r\nimport {CircleFill} from 'react-bootstrap-icons';\r\n\r\n// import job view from jobs\r\nimport Job from './job';\r\n\r\n\r\nclass jobs extends React.Component {\r\n     constructor(props) {\r\n          super(props);\r\n          this.state =({\r\n            view: 'jobs',\r\n            id: null , //id number of the startup to open\r\n\r\n             jobs: this.props.jobs,\r\n\r\n          //    loader   \r\n          load: true\r\n          })\r\n         \r\n     }\r\n\r\n     componentDidMount(){\r\n          this.props.active();\r\n          document.title = 'Jobs at startups';\r\n          window.scrollTo(0, 0);\r\n     }\r\n\r\n     componentWillUnmount(){\r\n          this.props.not_active();\r\n     }\r\n\r\n     jobs = () =>{\r\n          return(\r\n          <div > \r\n               <h1 className='investors-head'>Latest jobs at startups</h1>\r\n               {(this.state.jobs) ?\r\n               <div>\r\n                    <h5>Showing <b></b>{Object.keys(this.state.jobs).length} available jobs</h5>  \r\n                    <Container >\r\n                         <Row>\r\n                         {Object.values(this.state.jobs).map((val, ind) => \r\n                         <div key={ind} className='job-container shadow'>\r\n                         <Row>\r\n                         {/* <Col sm='auto'><CircleFill className='icon-back' height={50} width={50}/></Col> */}\r\n                         <Col sm='auto'>\r\n                              <div key={ind} className='col-startup-name' onClick={() => {this.setState({id: ind, view: 'job' })}}>{val.company.company_name}</div>\r\n                              <p>{val.description}</p>\r\n                              <span>{val.job_title}</span> <span><CircleFill className='icon-back' height={5} width={5}/></span> <span >{val.location}</span> <span><CircleFill className='icon-back' height={5} width={5}/></span> <span >{val.job_type}</span>\r\n                         </Col>\r\n                         </Row>\r\n                         </div>\r\n                         )}\r\n                         </Row>\r\n                    </Container>\r\n                </div>\r\n               :\r\n               <div>\r\n                    There are no current job listings available currently, plesae check again later\r\n               </div>\r\n               }\r\n               \r\n          </div>\r\n          )\r\n     }\r\n\r\n     renderview = () =>{\r\n          switch(this.state.view){\r\n               default: return <div><Spinner className=\"load\"  animation='border' color='#21295C'/></div>\r\n                   case 'jobs': return this.jobs();\r\n                   case 'job': return <Job job={this.state.jobs[this.state.id]} id={this.state.id} goback={() =>{this.setState({view: 'jobs'})}}/>;\r\n                   \r\n           }\r\n     }\r\n\r\n     render(){\r\n          return(\r\n          <div className='job-view'>   \r\n               {this.renderview()}\r\n          </div>\r\n          )\r\n     }\r\n}\r\n\r\njobs.propTypes = {\r\n     jobs: PropTypes.array.isRequired,\r\n     active: PropTypes.func.isRequired,\r\n     not_active: PropTypes.func.isRequired\r\n}\r\n\r\nexport default jobs;","import {React, useEffect} from 'react';\r\n\r\nfunction Policy(){\r\n     useEffect(() => {\r\n          document.title = 'Terms and Conditions';\r\n          window.scroll(0,0);\r\n     }, [])\r\n     return(\r\n          <div>\r\n               <div className=\"tagline\">Our terms and conditions @StartVest</div>\r\n          </div>\r\n     )\r\n}\r\n\r\nexport default Policy;","import {React, useEffect} from 'react';\r\n\r\nfunction Policy(){\r\n     useEffect(() => {\r\n          document.title = 'Private Policy';\r\n          window.scroll(0,0);\r\n     }, [])\r\n     return(\r\n          <div>\r\n               <div className=\"tagline\">Our Product Policy @StartVest</div>\r\n          </div>\r\n     )\r\n}\r\n\r\nexport default Policy;","export default __webpack_public_path__ + \"static/media/logo.25f5eefa.png\";","export default __webpack_public_path__ + \"static/media/logo-white.98074506.png\";","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './footer.css';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport {GeoAltFill, TelephoneOutboundFill,  EnvelopeFill } from 'react-bootstrap-icons';\r\n\r\n// Logo Import\r\nimport Logo from '../images/logo-white.png';\r\nclass footer extends React.Component {\r\n     render(){\r\n          return(\r\n          <div className='footer'>\r\n               <Container fluid>\r\n                   \r\n               <Row >\r\n                    <Col className='footer-links' md={'auto'}>\r\n                         <img src={Logo} height={30}  alt='Our logo'/>\r\n                    </Col>\r\n\r\n                    <Col className='footer-links' md={'auto'} sm={'auto'}>\r\n                    <ul>\r\n                         <li className='links-head'>Company</li>\r\n                         <li><a href={'#about'}>About Us</a></li>\r\n                         <li><a href={'#profile'}>Profile</a></li>\r\n                         <li className='coming-soon'>Career @ StartVest</li>\r\n                    </ul>\r\n                    </Col>\r\n\r\n                    <Col className='footer-links' md={'auto'} sm={'auto'}>\r\n                    <ul>\r\n                         <li className='links-head'>Quick Links</li>\r\n                         <li><a href={'#startups'}>Startups</a></li>\r\n                         <li><a href={'#investors'}>Investors</a></li>\r\n                         <li><a href={'#jobs'}>Available Jobs</a></li>\r\n                    </ul>\r\n                    </Col>\r\n\r\n                    <Col className='footer-links' md={'auto'} sm={'auto'}>\r\n                    <ul>\r\n                         <li className='links-head'>Policies</li>\r\n                         <li><a href={'#policy'}>Privacy Policy</a></li>\r\n                         <li><a href={'#terms'}>Terms and Condition</a></li>\r\n                    </ul>\r\n                    </Col>\r\n\r\n                    <Col className='footer-links' md={'auto'} sm={'auto'}>\r\n                         <ul>\r\n                              <li className='links-head'>Contact us</li>\r\n                              <li><span><EnvelopeFill color='#9EB3C2' /></span> <span className='links-a-head'>Email</span> - <a className='contact-link' href='mailto:admin@startvest.io'>contact@startvest.io</a></li>\r\n                              <li><span><TelephoneOutboundFill color='#9EB3C2' /></span> <span className='links-a-head'>Phone</span> - <a href='tel:+2349096281736'>+234 909 628 1736</a></li>\r\n                              <li><span><GeoAltFill color='#9EB3C2' /></span> <span className='links-a-head'>Location</span> - Abuja, Nigeria</li>\r\n                         </ul>\r\n                    </Col>\r\n               </Row>\r\n              \r\n               <Row className='footer-text' fluid='true'> \r\n                    <Col >\r\n                    &copy;  2021 StartVest Inc. All rights reserved   \r\n                    </Col>\r\n                    {/* <Col className='ml-auto'>\r\n                    <span><Twitter color='#9EB3C2' /></span>  <span>{<Github color='#9EB3C2 '/>}</span>\r\n                    </Col> */}\r\n               </Row>\r\n              \r\n               </Container>\r\n              \r\n          </div>\r\n          )\r\n     }\r\n}\r\nexport default footer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport  {Navbar, Nav}  from 'react-bootstrap';\r\nimport {HashRouter, Link, Route} from 'react-router-dom';\r\nimport './nav.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n// Import the views\r\nimport Home from '../Home/Home';\r\nimport About from '../About/about';\r\nimport Startups from '../Startups/startups';\r\nimport Investors from '../Investors/investors';\r\nimport Profile from '../Profile/profile';\r\nimport Jobs from '../jobs/jobs';\r\nimport Dashboard from '../dashboard/dashboard';\r\nimport TC from '../policies/t&c';\r\nimport Policy from '../policies/policy';\r\n\r\n\r\n// The logo\r\nimport Logo from '../images/logo.png';\r\n\r\n// Import footer\r\nimport Footer from '../footer/footer';\r\n\r\n// Menu Icon\r\nimport {List, X} from 'react-bootstrap-icons';\r\n\r\nclass nav extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state =({\r\n          // Set all the active states of the links\r\n          home_active: false,\r\n          about_active: false,\r\n          jobs_active: false,\r\n          startups_active: false,\r\n          investors_active: false,\r\n          profile_active: false,\r\n\r\n          // The state of the toggle button\r\n          expanded : false\r\n      })\r\n    }\r\n\r\n    setExpanded = () =>{\r\n          console.log(!this.state.expanded)\r\n          this.setState({expanded: !this.state.expanded})\r\n          \r\n    }\r\n\r\n     render() {\r\n          return(\r\n               <div>\r\n               <HashRouter basename='/'>\r\n               <Navbar className=\"navigation shadow-sm\"  collapseOnSelect expand=\"md\" bg=\"light\" sticky='top' >\r\n               <Link to='/'><Navbar.Brand><img src={Logo} height={30} alt='Startvest logo'/></Navbar.Brand></Link>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" className='nav-toggle' onClick={this.setExpanded}>\r\n                     {(this.state.expanded) ? <X height={30} width={30} />: <List height={30} width={30} color='#21295C'/>}\r\n                </Navbar.Toggle>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\" >\r\n                  <Nav className=\"ml-auto navitems\" defaultActiveKey=\"/\">  \r\n                  <Nav.Link href=\"#/\" className={`Navlinks ${(this.state.home_active) ? 'active' : ''}`}>Home</Nav.Link>\r\n                  <Nav.Link href=\"#about\"  className={`Navlinks ${(this.state.about_active) ? 'active' : ''}`}>About</Nav.Link>\r\n                  <Nav.Link href=\"#jobs\" className={`Navlinks ${(this.state.jobs_active) ? 'active' : ''}`}>Jobs</Nav.Link>\r\n                  <Nav.Link href=\"#startups\"  className={`Navlinks ${(this.state.startups_active) ? 'active' : ''}`}>Startups</Nav.Link>\r\n                  <Nav.Link href=\"#investors\"  className={`Navlinks ${(this.state.investors_active) ? 'active' : ''}`}>Investors</Nav.Link>\r\n                  <Nav.Link href=\"#profile\" className={`Navlinks quick-signin-nav`}><div className='quick-signin shadow'>Sign Up For Free</div></Nav.Link>\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n               </Navbar>\r\n             \r\n             <div className='views'>\r\n                  <Route exact path=\"/\"><Home active={() => this.setState({home_active: true})} not_active={() => this.setState({home_active: false})}  investors={this.props.investors} startups={this.props.startups}/></Route>                    <Route exact path=\"/about\"><About active={() => this.setState({about_active: true})} not_active={() => this.setState({about_active: false})}/></Route>  \r\n                  <Route exact path=\"/startups\"><Startups active={() => this.setState({startups_active: true})} not_active={() => this.setState({startups_active: false})} startups={this.props.startups}/></Route>\r\n                  <Route exact path=\"/investors\"><Investors active={() => this.setState({investors_active: true})} not_active={() => this.setState({investors_active: false})} investors={this.props.investors}/></Route>  \r\n                  <Route exact path=\"/profile\"><Profile active={() => this.setState({profile_active: true})} not_active={() => this.setState({profile_active: false})}/></Route>  \r\n                  <Route exact path=\"/jobs\"><Jobs active={() => this.setState({jobs_active: true})} not_active={() => this.setState({jobs_active: false})} jobs={this.props.jobs}/></Route>  \r\n                  <Route exact path=\"/dashboard\"><Dashboard/></Route> \r\n                  <Route exact path=\"/policy\"><Policy/></Route> \r\n                  <Route exact path=\"/terms\"><TC/></Route> \r\n             </div>\r\n             </HashRouter>\r\n             \r\n             {/* Added footer to the navbar content */}\r\n             <Footer/>\r\n             </div>\r\n          )\r\n     }\r\n}\r\n\r\nnav.propTypes = {\r\n     investors: PropTypes.oneOfType([PropTypes.array,PropTypes.object,]).isRequired,\r\n     startups: PropTypes.oneOfType([PropTypes.array,PropTypes.object,]).isRequired,\r\n     jobs: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default nav;","// import React, { useState } from 'react';\r\n\r\nexport default async function ConnectDB(){\r\n     const staging =  'https://startvest-staging.herokuapp.com/api/v1.0/';\r\n     // const build = 'https://startvest.herokuapp.com/api/v1.0/';\r\n\r\n     await fetch(`${staging}users/login/`, {\r\n               method: 'POST', \r\n               headers: {\r\n               'Content-Type': 'application/json',\r\n               },\r\n               body: JSON.stringify({\"username\": \"Admin\",\r\n               \"email\": \"startvest4@gmail.com\",\r\n               \"password\": \"24vJiKSu42z8VD8\"}),\r\n               })\r\n               .then(response => response.json())\r\n               .then(data => {    \r\n               localStorage.removeItem('token');\r\n               localStorage.setItem('token', data.access_token);\r\n               console.log('Server connected successfully');\r\n              \r\n              \r\n               })\r\n               .catch((error) => {\r\n               console.error('Error:', error);\r\n          });\r\n\r\n          \r\n          return localStorage.getItem('token');\r\n     \r\n     // https://startvest.herokuapp.com/api/v1.0/investors/\r\n     // https://startvest-staging.herokuapp.com/api/v1.0/users/registration/\r\n     // fetch(`${staging}users/registration/`, {\r\n     //      method: 'POST', \r\n     //      headers: {\r\n     //      'Content-Type': 'application/json',\r\n     //      },\r\n     //      body: JSON.stringify({\r\n     //                \"username\": \"Admin\",\r\n     //                \"email\": \"startvest4@gmail.com\",\r\n     //                \"password1\": \"24vJiKSu42z8VD8\",\r\n     //                \"password2\": \"24vJiKSu42z8VD8\"}),\r\n     //      })\r\n     //      .then(response => response.json())\r\n     //      .then(data => {    \r\n     //           console.log(data)  ; \r\n     //      localStorage.clear('token');\r\n     //      localStorage.setItem('token', data.access_token);\r\n     //      })\r\n     //      .catch((error) => {\r\n     //      console.error('Error:', error);\r\n     // });\r\n\r\n\r\n\r\n     // NOTE: BEFORE BUILDING THE UPDATE, FIND A solution TO \r\n     // SCROLL UP TO A PAGE TOP ANYTIME THE VIEW IS CHANGED E.G REGISTRATION FORM\r\n     \r\n}","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Home.css';\r\nimport {ExclamationTriangle} from 'react-bootstrap-icons';\r\n\r\n\r\n// New Loader\r\nimport { css } from \"@emotion/react\";\r\nimport BarLoader from \"react-spinners/BarLoader\";\r\n\r\n\r\n// Logo\r\nimport Logo from '../images/load-logo.png';\r\n\r\n// Import navigation view\r\nimport Nav from '../Nav/nav';\r\n\r\n// Import Connector to server\r\nimport Connect from '../utility/connectdb';\r\n\r\n\r\nclass Loader extends React.Component {\r\n     constructor(props) {\r\n          super(props);\r\n          this.state = {\r\n               load: true,\r\n               internet: true, //Assumes internet is true for the website to load\r\n               data: [],\r\n               url: 'https://startvest.github.io/frontend',\r\n\r\n               investors: [],\r\n               startups: [],\r\n               jobs: [],\r\n\r\n               // State for loading the information\r\n               load_start: false,\r\n               load_invest: false,\r\n               load_jobs: false\r\n          }\r\n\r\n     }\r\n\r\n     connect = async () =>{\r\n          let token = await Connect();\r\n\r\n          const staging =  'https://startvest-staging.herokuapp.com/api/v1.0/';\r\n          fetch(`${staging}investors/`, {\r\n               method: 'GET', \r\n               headers: {\r\n                         Authorization: `Bearer ${token}` \r\n                    }})\r\n               .then(response => response.json())\r\n               .then(data => {    \r\n                    this.setState({ investors: data.results , load_start:true});\r\n               })\r\n               .catch((error) => {\r\n               console.error('Error:', error);\r\n          });\r\n\r\n          fetch(`${staging}startups/`, {\r\n               method: 'GET', \r\n               headers: {\r\n                         Authorization: `Bearer ${token}` \r\n                    }})\r\n               .then(response => response.json())\r\n               .then(data => {    \r\n                    // console.log('Startups: '+ JSON.stringify(data)); \r\n                    this.setState({ startups: data.results , load_invest:true});\r\n               })\r\n               .catch((error) => {\r\n               console.error('Error:', error);\r\n          });\r\n           \r\n          fetch(`${staging}startups/viewjobs/`, {\r\n               method: 'GET', \r\n               headers: {\r\n                         Authorization: `Bearer ${token}` \r\n                    }})\r\n               .then(response => response.json())\r\n               .then(data => {    \r\n                    // console.log('Available jobs: '+ JSON.stringify(data)); \r\n                    this.setState({ jobs: data.results , load_jobs:true});\r\n               })\r\n               .catch((error) => {\r\n               console.error('Error:', error);\r\n          });\r\n                // Check if all the data from the database has loaded before calling the main loadS\r\n                setInterval(() => {\r\n                    if(this.state.load_start && this.state.load_invest  && this.state.load_jobs){\r\n                         this.setState({load: false})   \r\n                    }\r\n               }, 40);\r\n\r\n          }\r\n\r\n     // The the overide css for the loading icon on the home screen\r\n      override = css`\r\n          display: block;\r\n          margin: 2em auto;\r\n          border-radius: 40px;\r\n          background: none;\r\n          `;\r\n\r\n     async componentDidMount() {\r\n          \r\n          // Call the connect function immediately after it mounts\r\n          this.connect();\r\n\r\n          // Display a warning message that the user internet is slow\r\n          // If it takes long to load the app\r\n          setTimeout(() => {\r\n               if(this.state.load){\r\n                    this.setState({internet: false});\r\n               }\r\n          }, 8000);\r\n          \r\n          // Reloads the connect function every 1 second\r\n          setInterval(() =>{\r\n               if(this.state.load){\r\n                    this.connect();\r\n               }\r\n          }, 1000)\r\n     }\r\n\r\n\r\n     // Loading screen to simulate a native application\r\n     // It takes 2 seconds to show\r\n     loadScreen = () => {\r\n          return(\r\n               <div>\r\n                    <div className='Load'>\r\n                         <div><img src={Logo} alt='Our logo' height={55}/></div>\r\n                          <BarLoader color={'#21295C'} loading={true} css={this.override} height={3} width={200} speedMultiplier={0.8} />\r\n                    </div>\r\n\r\n                    {(this.state.internet === false) ? \r\n                    <div className='err-message'>\r\n                    <ExclamationTriangle color='red' height={20} width={20}/>  Your Internet connection is slow or not connected\r\n                    </div>                    \r\n                    :null}\r\n               </div>\r\n               \r\n          )\r\n     }\r\n\r\n\r\n     renderviews(){\r\n          switch(this.state.load){\r\n               default: return this.loadScreen();\r\n               case true: return this.loadScreen();\r\n               case false: return  <Nav investors={this.state.investors} startups={this.state.startups} jobs={this.state.jobs}/>;\r\n          }\r\n     }\r\n\r\n     render(){\r\n            return(\r\n               <div>\r\n                    {this.renderviews()}\r\n               </div>\r\n          );\r\n     }\r\n\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport './App.css';\r\n\r\n// Loading screen\r\nimport Loader from './Home/Loadhome';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n\r\n    <Loader/>\r\n \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n     window.location.hostname === 'localhost' ||\r\n       // [::1] is the IPv6 localhost address.\r\n       window.location.hostname === '[::1]' ||\r\n       // 127.0.0.0/8 are considered localhost for IPv4.\r\n       window.location.hostname.match(\r\n         /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n       )\r\n   );\r\n   \r\n   export function register(config) {\r\n     if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n       // The URL constructor is available in all browsers that support SW.\r\n       const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n       if (publicUrl.origin !== window.location.origin) {\r\n         // Our service worker won't work if PUBLIC_URL is on a different origin\r\n         // from what our page is served on. This might happen if a CDN is used to\r\n         // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n         return;\r\n       }\r\n   \r\n       window.addEventListener('load', () => {\r\n         const swUrl = `${process.env.PUBLIC_URL}/worker.js`;\r\n   \r\n         if (isLocalhost) {\r\n           // This is running on localhost. Let's check if a service worker still exists or not.\r\n           checkValidServiceWorker(swUrl, config);\r\n   \r\n           // Add some additional logging to localhost, pointing developers to the\r\n           // service worker/PWA documentation.\r\n           navigator.serviceWorker.ready.then(() => {\r\n             console.log(\r\n               'This web app is being served cache-first by a service ' +\r\n                 'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n             );\r\n           });\r\n         } else {\r\n           // Is not localhost. Just register service worker\r\n           registerValidSW(swUrl, config);\r\n         }\r\n       });\r\n     }\r\n   }\r\n   \r\n   function registerValidSW(swUrl, config) {\r\n     navigator.serviceWorker\r\n       .register(swUrl)\r\n       .then(registration => {\r\n         registration.onupdatefound = () => {\r\n           const installingWorker = registration.installing;\r\n           if (installingWorker == null) {\r\n             return;\r\n           }\r\n           installingWorker.onstatechange = () => {\r\n             if (installingWorker.state === 'installed') {\r\n               if (navigator.serviceWorker.controller) {\r\n                 // At this point, the updated precached content has been fetched,\r\n                 // but the previous service worker will still serve the older\r\n                 // content until all client tabs are closed.\r\n                 console.log(\r\n                   'New content is available and will be used when all ' +\r\n                     'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                 );\r\n   \r\n                 // Execute callback\r\n                 if (config && config.onUpdate) {\r\n                   config.onUpdate(registration);\r\n                 }\r\n               } else {\r\n                 // At this point, everything has been precached.\r\n                 // It's the perfect time to display a\r\n                 // \"Content is cached for offline use.\" message.\r\n                 console.log('Content is cached for offline use.');\r\n   \r\n                 // Execute callback\r\n                 if (config && config.onSuccess) {\r\n                   config.onSuccess(registration);\r\n                 }\r\n               }\r\n             }\r\n           };\r\n         };\r\n       })\r\n       .catch(error => {\r\n         console.error('Error during service worker registration:', error);\r\n       });\r\n   }\r\n   \r\n   function checkValidServiceWorker(swUrl, config) {\r\n     // Check if the service worker can be found. If it can't reload the page.\r\n     fetch(swUrl, {\r\n       headers: { 'Service-Worker': 'script' },\r\n     })\r\n       .then(response => {\r\n         // Ensure service worker exists, and that we really are getting a JS file.\r\n         const contentType = response.headers.get('content-type');\r\n         if (\r\n           response.status === 404 ||\r\n           (contentType != null && contentType.indexOf('javascript') === -1)\r\n         ) {\r\n           // No service worker found. Probably a different app. Reload the page.\r\n           navigator.serviceWorker.ready.then(registration => {\r\n             registration.unregister().then(() => {\r\n               window.location.reload();\r\n             });\r\n           });\r\n         } else {\r\n           // Service worker found. Proceed as normal.\r\n           registerValidSW(swUrl, config);\r\n         }\r\n       })\r\n       .catch(() => {\r\n         console.log(\r\n           'No internet connection found. App is running in offline mode.'\r\n         );\r\n       });\r\n   }\r\n   \r\n   export function unregister() {\r\n     if ('serviceWorker' in navigator) {\r\n       navigator.serviceWorker.ready\r\n         .then(registration => {\r\n           registration.unregister();\r\n         })\r\n         .catch(error => {\r\n           console.error(error.message);\r\n         });\r\n     }\r\n   }\r\n   ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\nserviceWorker.register();\r\n// To push changes to the repo\r\n// gir remote add Hanif-adedotun https://github.com/Hanif-adedotun/startvest-phase-1.git\r\n// git remote set-url origin https://github.com/Hanif-adedotun/startvest-phase-1.git\r\n// git push Hanif-adedotun\r\n\r\n// git add frontend https://github.com/Hanif-adedotun/startvest-phase-1\r\n// git commit -m \"Your message\"\r\n// git push\r\n// Then merge on github.com\r\n\r\n// To run client app\r\n// cd frontend\r\n// then run: npm run client\r\n\r\n// To deploy to github pages\r\n// npm run deploy\r\n\r\n// Content of Css file\r\n// body {\r\n//   margin: 0;\r\n//   font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n//     'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n//     sans-serif;\r\n//   -webkit-font-smoothing: antialiased;\r\n//   -moz-osx-font-smoothing: grayscale;\r\n// }\r\n\r\n// code {\r\n//   font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n//     monospace;\r\n// }\r\n"],"sourceRoot":""}